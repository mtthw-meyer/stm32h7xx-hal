[package]
name = "stm32h7xx-hal"
version = "0.1.0"
authors = ["Andrew Straw <strawman@astraw.com>",
           "Richard Meadows <richard@richard.fish>",
           "Henrik Böving <hargonix@gmail.com>",
           "Jan Adä <jan.adae@outlook.de>",
           "Robert Jördens <rj@quartiq.de>"]
edition = "2018"
categories = ["embedded", "hardware-support", "no-std"]
description = "Peripheral access API for STM32H7 series microcontrollers"
keywords = ["arm", "cortex-m", "stm32h7xx", "hal", "embedded-hal"]
license = "0BSD"
repository = "https://github.com/stm32-rs/stm32h7xx-hal"
documentation = "https://docs.rs/stm32h7xx-hal"
readme = "README.md"

[package.metadata.docs.rs]
features = ["stm32h743", "rt"]

[dependencies]
embedded-hal = "0.2.3"
cortex-m = "^0.6.0"
cortex-m-rt = "0.6.10"
stm32h7 = "0.8.0"
void = { version = "1.0.2", default-features = false }
cast = { version = "0.2.2", default-features = false }
nb = "0.1.2"
[dependencies.bare-metal]
version = "0.2.4"
features = ["const-fn"]

[dev-dependencies]
panic-itm = "~0.4.1"
cortex-m-log = { version = "~0.6", features = ["itm"] }

[features]
default = ["unproven"]
unproven = ["embedded-hal/unproven"]
device-selected = []
revision_v = []
rt = ["stm32h7/rt"]
stm32h742 = ["stm32h7/stm32h743", "device-selected"]
stm32h743 = ["stm32h7/stm32h743", "device-selected"]
stm32h753 = ["stm32h7/stm32h753", "device-selected"]
stm32h750 = ["stm32h7/stm32h743", "device-selected"]
stm32h742v = ["stm32h7/stm32h743v", "device-selected", "revision_v"]
stm32h743v = ["stm32h7/stm32h743v", "device-selected", "revision_v"]
stm32h753v = ["stm32h7/stm32h753v", "device-selected", "revision_v"]
stm32h750v = ["stm32h7/stm32h743v", "device-selected", "revision_v"]


[profile.dev]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size in flash
incremental = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size in flash
lto = true # better optimizations
opt-level = "s" # optimize for binary size
